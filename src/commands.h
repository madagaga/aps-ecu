#ifndef commands_h_
#define commands_h_ 

#include <Arduino.h>

#define ZNP_SOF 0xFE





/* ECU */
// const uint8_t ECU_ID[]{0xD8, 0xA3, 0x01, 0x1B, 0x97, 0x80};         // "D8A3011B9780"
// const uint8_t ECU_ID_SHORT[]{0xD8, 0xA3};                           // "D8A3"
static const uint8_t ECU_ID_REVERSE[6]{0x80, 0x97, 0x1B, 0x01, 0xA3, 0xD8}; // "80971B01A3D8"
// const uint8_t ECU_ID_REVERSE_SHORT[]{0xA3, 0xD8};                   // "A3D8"

/* INIT COMMANDS */
const uint8_t INIT_0_COMMAND[5]{0x26, 0x05, 0x03, 0x01, 0x03};                                                              //"2605030103"                     // ok   this is a ZB_WRITE_CONFIGURATION CMD //changed to 01
const uint8_t INIT_1_COMMAND[3]{0x41, 0x00, 0x00};                                                                          //"410000"                         // ok   ZB_SYS_RESET_REQ
const uint8_t INIT_2_COMMAND[12]{0x26, 0x05, 0x01, 0x08, 0xFF, 0xFF, 0x80, 0x97, 0x1B, 0x01, 0xA3, 0xD8};                   //"26050108FFFF" ECU_ID_REVERSE    // + ecu_id_reverse,  this is a ZB_WRITE_CONFIGURATION CMD
const uint8_t INIT_3_COMMAND[5]{0x26, 0x05, 0x87, 0x01, 0x00};                                                              //"2605870100"                     // ok
const uint8_t INIT_4_COMMAND[6]{0x26, 0x05, 0x83, 0x02, 0xD8, 0xA3};                                                        //"26058302" ECU_ID_SHORT          // + ecu_id short,
const uint8_t INIT_5_COMMAND[8]{0x26, 0x05, 0x84, 0x04, 0x00, 0x00, 0x01, 0x00};                                            //"2605840400000100"               // ok
const uint8_t INIT_6_COMMAND[15]{0x24, 0x00, 0x14, 0x05, 0x0F, 0x00, 0x01, 0x01, 0x00, 0x02, 0x00, 0x00, 0x15, 0x00, 0x00}; //"240014050F00010100020000150000" // AF_REGISTER register an applicationâ€™s endpoint description
const uint8_t INIT_7_COMMAND[2]{0x26, 0x00};

const uint8_t INIT_8_COMMAND[2]{0x67, 0x00}; //"6700"                           // ok ZB_START_REQUEST

const uint8_t PING_COMMAND[2]{0x21, 0x01}; // 2101 - expected respons 7907

const uint8_t HEART_BEAT_COMMAND[2]{0x27, 0x00}; //"2700"

//                                 24    02     0F   FF    FF    FF    FF    FF    FF    FF    FF    14    FF    FF    14    0D    02    00    00    0F    11    00                                       FF    FF    10    FF    FF
const uint8_t PAIR_1_COMMAND[39]{0x24, 0x02, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x14, 0xFF, 0xFF, 0x14, 0x0D, 0x02, 0x00, 0x00, 0x0F, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x10, 0xFF, 0xFF, 0x80, 0x97, 0x1B, 0x01, 0xA3, 0xD8}; // + inverter serial + part2

//                               24    02    0F    FF    FF    FF    FF    FF    FF    FF    FF    14    FF    FF    14    0C    02    01    00    0F    06    00
const uint8_t PAIR_2_COMMAND[22]{0x24, 0x02, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x14, 0xFF, 0xFF, 0x14, 0x0C, 0x02, 0x01, 0x00, 0x0F, 0x06, 0x00}; // + inverter serial
//                                 24    02    0F    FF    FF    FF    FF    FF    FF    FF    FF    14    FF    FF    14    0F    01    02    00    0F    11    00    S      E    R    I     A      L                   10    FF    FF
const uint8_t PAIR_3_COMMAND[39]{0x24, 0x02, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x14, 0xFF, 0xFF, 0x14, 0x0F, 0x01, 0x02, 0x00, 0x0F, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA3, 0xD8, 0x10, 0xFF, 0xFF, 0x80, 0x97, 0x1B, 0x01, 0xA3, 0xD8}; //  reverse ecu_id short  "10FFFF"  ecu_id_reverse,
//                               24    02    0F    FF    FF    FF    FF    FF    FF    FF    FF    14    FF    FF    14    01    01    03    00    0F    06    00
const uint8_t PAIR_4_COMMAND[28]{0x24, 0x02, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x14, 0xFF, 0xFF, 0x14, 0x01, 0x01, 0x03, 0x00, 0x0F, 0x06, 0x00, 0x80, 0x97, 0x1B, 0x01, 0xA3, 0xD8};

const uint8_t PAIR_UNREACHABLE[6]{0xFE, 0x01, 0x64, 0x02, 0x00, 0x67}; // FE 01 64 02 00 67
const uint8_t PAIR_NO_ROUTE[8]{0xFE, 0x03, 0x44, 0x80, 0xCD, 0x14, 0x01, 0x1F};

// firmware version request
//                                                                                                                                             FB    FB    06    DC    00    00    00    00    00    00    E2    FE    FE
// poll request 
//                                                                                                                                             FB    FB    06    BB    00    00    00    00    00    0C1FEFE
//                                 24    01    %s          14    14    06    00    01    00    0F    13                                  %s    FB    FB    06    BB    00    00    00    00    00    00    C1    FE    FE
//                                            I    D       14    14    06    00    01    00    0F    13                                        FB    FB    06    BB    00    00    00    00    00    00    C1    FE    FE
const uint8_t POLL_1_COMMAND[31]{0x24, 0x01, 0x00, 0x00, 0x14, 0x14, 0x06, 0x00, 0x01, 0x00, 0x0F, 0x13, 0x80, 0x97, 0x1B, 0x01, 0xA3, 0xD8, 0xFB, 0xFB, 0x06, 0xBB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC1, 0xFE, 0xFE};

const uint8_t POLL_AF_DATA_REQUEST[6]{0xFE, 0x01, 0x64, 0x01, 0x00, 0x64};
const uint8_t POLL_AF_DATA_CONFIRM[5]{0xFE, 0x03, 0x44, 0x80, 0x00};
const uint8_t POLL_AF_INCOMING_MSG[4]{0x44, 0x81, 0x00, 0x00};
//                             24    01    FF    FF    14    14    06    00    01    00    0F    1E                                        FB    FB   11     00    00    0D    60    30    FB    D3    00    00    00    00    00    00    00    00    04    01    02    81    FE    FE
const uint8_t NOOP_COMMAND[42]{0x24, 0x01, 0xFF, 0xFF, 0x14, 0x14, 0x06, 0x00, 0x01, 0x00, 0x0F, 0x1E, 0x80, 0x97, 0x1B, 0x01, 0xA3, 0xD8, 0xFB, 0xFB, 0x11, 0x00, 0x00, 0x0D, 0x60, 0x30, 0xFB, 0xD3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x01, 0x02, 0x81, 0xFE, 0xFE};

#endif